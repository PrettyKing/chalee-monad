const express = require('express');\nconst cors = require('cors');\nconst { ethers } = require('ethers');\nrequire('dotenv').config();\nconst fs = require('fs');\nconst path = require('path');\n\nconst app = express();\nconst PORT = process.env.PORT || 3000;\n\n// Middleware\napp.use(cors());\napp.use(express.json());\napp.use(express.static(path.join(__dirname, 'public')));\n\n// Load contract ABI\nlet contractABI;\ntry {\n  const artifactPath = path.join(__dirname, 'artifacts', 'contracts', 'ChaleeToken.sol', 'ChaleeToken.json');\n  if (fs.existsSync(artifactPath)) {\n    const artifact = JSON.parse(fs.readFileSync(artifactPath, 'utf8'));\n    contractABI = artifact.abi;\n  }\n} catch (error) {\n  console.warn('Contract ABI not found. Please compile contracts first.');\n}\n\n// Load deployment info\nlet deploymentInfo;\ntry {\n  const deploymentPath = path.join(__dirname, 'deployments', 'monadTestnet.json');\n  if (fs.existsSync(deploymentPath)) {\n    deploymentInfo = JSON.parse(fs.readFileSync(deploymentPath, 'utf8'));\n  }\n} catch (error) {\n  console.warn('Deployment info not found.');\n}\n\n// API Routes\napp.get('/api/contract-info', (req, res) => {\n  if (!deploymentInfo) {\n    return res.status(404).json({ error: 'Contract not deployed yet' });\n  }\n  \n  res.json({\n    address: deploymentInfo.contractAddress,\n    network: 'Monad Testnet',\n    explorerUrl: `https://explorer-testnet.monad.xyz/address/${deploymentInfo.contractAddress}`,\n    ...deploymentInfo.contractInfo\n  });\n});\n\napp.get('/api/contract-abi', (req, res) => {\n  if (!contractABI) {\n    return res.status(404).json({ error: 'Contract ABI not available' });\n  }\n  \n  res.json({ abi: contractABI });\n});\n\napp.get('/api/network-info', (req, res) => {\n  res.json({\n    name: 'Monad Testnet',\n    chainId: 41454,\n    rpcUrl: 'https://testnet1.monad.xyz',\n    explorerUrl: 'https://explorer-testnet.monad.xyz',\n    symbol: 'MON',\n    faucetUrl: 'https://faucet-testnet.monad.xyz'\n  });\n});\n\n// Serve the main page\napp.get('/', (req, res) => {\n  res.sendFile(path.join(__dirname, 'public', 'index.html'));\n});\n\n// Health check\napp.get('/health', (req, res) => {\n  res.json({ \n    status: 'ok', \n    timestamp: new Date().toISOString(),\n    contractDeployed: !!deploymentInfo\n  });\n});\n\n// Error handling middleware\napp.use((err, req, res, next) => {\n  console.error(err.stack);\n  res.status(500).json({ error: 'Something went wrong!' });\n});\n\n// 404 handler\napp.use((req, res) => {\n  res.status(404).json({ error: 'Route not found' });\n});\n\napp.listen(PORT, () => {\n  console.log(`🚀 Server running on port ${PORT}`);\n  console.log(`📱 Open http://localhost:${PORT} to view the demo`);\n  \n  if (deploymentInfo) {\n    console.log(`📋 Contract deployed at: ${deploymentInfo.contractAddress}`);\n    console.log(`🔍 View on explorer: https://explorer-testnet.monad.xyz/address/${deploymentInfo.contractAddress}`);\n  } else {\n    console.log(`⚠️  Contract not deployed yet. Run 'npm run deploy:testnet' first.`);\n  }\n});